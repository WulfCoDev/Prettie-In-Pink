app PrettieInPink {
  wasp: {
    version: "^0.16.2"
  },
  title: "Prettie-In-Pink",
  auth: {
    userEntity: User,
    methods: {
      email: {
        userSignupFields: import { userSignupFields } from "@src/auth/signup",
        fromField: {
          name: "Prettie In Pink",
          email: "Lena@PrettieInPink.com"
        },
        emailVerification: {
          clientRoute: EmailVerificationRoute,
        },
        passwordReset: {
          clientRoute: PasswordResetRoute,
        },
      },
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/my-appointments"
  },
  emailSender: {
    provider: Dummy,
  }
}

route RootRoute { path: "/", to: MainPage }
page MainPage {
  component: import { MainPage } from "@src/MainPage"
}

route NotAuthorizedRoute { path: "/not-authorized", to: NotAuthorizedPage }
page NotAuthorizedPage {
  component: import  NotAuthorized  from "@src/user/NotAuthorized"
}

route MyAppointmentsRoute { path: "/my-appointments", to: MyAppointmentsPage}
page MyAppointmentsPage {
  component: import  MyAppointments  from "@src/user/MyAppointments.jsx",
  authRequired: true
}

route AdminDashboardRoute { path: "/admin", to: AdminDashboardPage}
page AdminDashboardPage {
  component: import  AdminDashboard  from "@src/admin/AdminDashboard.jsx",
  authRequired: true
}

route DashboardRoute { path: "/admin/dashboard", to: DashboardPage}
page DashboardPage {
  component: import  Dashboard  from "@src/admin/Dashboard.jsx",
  authRequired: true
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import { Login } from "@src/auth/auth.jsx"
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import { Signup } from "@src/auth/auth.jsx"
}

route RequestPasswordResetRoute { path: "/request-password-reset", to: RequestPasswordResetPage }
page RequestPasswordResetPage {
  component: import { RequestPasswordReset } from "@src/auth/auth.jsx",
}

route PasswordResetRoute { path: "/password-reset", to: PasswordResetPage }
page PasswordResetPage {
  component: import { PasswordReset } from "@src/auth/auth.jsx",
}

route EmailVerificationRoute { path: "/email-verification", to: EmailVerificationPage }
page EmailVerificationPage {
  component: import { EmailVerification } from "@src/auth/auth.jsx",
}

route AdminClientsRoute { path: "/admin/clients", to: AdminClientsPage }
page AdminClientsPage {
  component: import Clients from "@src/admin/Clients.jsx",
  authRequired: true
}

route AdminAvailabilityRoute { path: "/admin/availability", to: AdminAvailabilityPage }
page AdminAvailabilityPage {
  component: import AvailabilityPanel from "@src/admin/Availability.jsx",
  authRequired: true
}

route AdminReportsRoute { path: "/admin/reports", to: AdminReportsPage }
page AdminReportsPage {
  component: import Reports from "@src/admin/Reports.jsx",
  authRequired: true
}

route AdminServicesRoute { path: "/admin/services", to: AdminServicesPage }
page AdminServicesPage {
  component: import Services from "@src/admin/Services.jsx",
  authRequired: true
}

route ScheduleAppointmentRoute { path: "/schedule-appointment", to: ScheduleAppointmentPage }
page ScheduleAppointmentPage {
  component: import ScheduleAppointment from "@src/scheduling/ScheduleAppointment.jsx",
  authRequired: true
}

crud Services {
  entity: Service,
  operations: {
    getAll: {
      isPublic: true,
    },
    get: {},
    create: {},
    update: {},
    delete: {},
  }
}

crud Clients {
  entity: User,
  operations: {
    getAll: {},
    get: {},
    create: {},
    update: {},
    delete: {},
  }
}

crud Availability {
  entity: Availability,
  operations: {
    getAll: {},
    get: {},
    create: {},
    update: {},
    delete: {},
  }
}
